ame: "convolutional Seq2Seq"
joeynmt_version: "2.0.0"

data:
    train: "test/data/wmt14/train"
    dev: "test/data/wmt14/dev"
    test: "test/data/wmt14/test"
    dataset_type: "plain"
    src:
        lang: "de"
        max_length: 62
        lowercase: True
        normalize: False
        level: "bpe"
        voc_min_freq: 1
        voc_file: "test/data/wmt14/bpe_vocab.txt"
        tokenizer_type: "subword-nmt"
        tokenizer_cfg:
            num_merges: 4000
            codes: "test/data/wmt14/bpe.4000"
            pretokenizer: "none"
    trg:
        lang: "en"
        max_length: 62
        lowercase: True
        normalize: False
        level: "bpe"
        voc_min_freq: 1
        voc_file: "test/data/iwslt14/bpe_vocab.txt"
        tokenizer_type: "subword-nmt"
        tokenizer_cfg:
            num_merges: 4000
            codes: "test/data/iwslt14/bpe.4000"
            pretokenizer: "none"

testing:
    n_best: 1
    beam_size: 1
    beam_alpha: 1.0
    eval_metrics: ["bleu"]
    max_output_length: 30
    batch_size: 10
    batch_type: "sentence"
    return_prob: "none"

training:
    loss: "crossentropy"            
    label_smoothing: 0.1
    random_seed: 42
    optimizer: "adam"
    learning_rate: 0.001
    learning_rate_min: 0.0002
    weight_decay: 0.0
    clip_grad_norm: 1.0
    batch_size: 10
    batch_type: "sentence"
    scheduling: "plateau"
    patience: 5
    decrease_factor: 0.5
    early_stopping_metric: "bleu"
    epochs: 1
    validation_freq: 1000
    logging_freq: 100
    model_dir: "wmt14_conv"
    overwrite: True
    shuffle: True
    use_cuda: False
    fp16: True
    print_valid_sents: [0, 3, 6]
    keep_best_ckpts: 2
model:
  initializer: "normal" 
  linear_initializer: "normal"
  eembed_initializer: "normal"    
  embed_init_weight: 0.1          
  bias_initializer: "zeros"       
  encoder:
    type: "convolutional"
    layers: 
      layer 1:
          output_channels: 512
          kernel_width: 3 
          residual: True
      layer 2:
          output_size: 287
          kernel_width: 3 
          residual: True
    num_layers: 5 # other three layer use the default values: 512 output_channnel,kernel_width:3, residual:True
    dropout: 0.1
    embeddings:
            embedding_dim: 64       
            scale: True    
  decoder:
    type: "convolutional"
    layers: 
      layer 1:
          output_channels: 512
          kernel_width: 3 
          residual: True
      layer 2:
          output_channels: 287
          kernel_width: 3 
          residual: True
    num_layers: 5
    dropout: 0.1
    embeddings:
          embedding_dim: 64       
          scale: True  
